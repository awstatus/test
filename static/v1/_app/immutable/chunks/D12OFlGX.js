import { u as t } from "./DM69BKKN.js";
let n = { api_key: { delete1: "Soll dieser API Key wirklich gel\xF6scht werden?", expires: "Erlischt", generate1: "Hier kann ein neues Secret f\xFCr diesen API Key generiert werden.", generate2: `Das Secret wird nur einmalig direkt nach dem Generieren angezeigt.
            Wenn ein Neues generiert wurde, wird das Alte unmittelbar, permanent \xFCberschrieben.
            Diese Operation kann nicht r\xFCckg\xE4ngig gemacht werden!`, generate3: `Der API Key muss im HTTP <code>Authorization</code> Header im folgenden
            Format mitgegeben werden:`, generate4: "Der folgende <code>curl</code> request kann zum Testen des Keys verwendet werden:", generate5: "Sollte <code>jq</code> nicht installiert sein, hier eine Version ohne:", keyName: "Key Name", limitedValidity: "Begrenzte G\xFCltigkeit" }, attrs: { delete1: "Soll dieses Attribut wirklich gel\xF6scht werden?", desc: "Beschreibung", name: "Attribut Name" }, clients: { backchannelLogout: "Sollte dieser client {{ OIDC_BCL }} unterst\xFCtzen, kann die URI hier angegeben werden.", branding: { descHsl: `Die folgenden Werte m\xFCssen als HSL angegeben werden. Hier wird nur die Basis-Farbe
                definiert. Alpha Kan\xE4le und andere Werte werden vom Theme dynamisch angepasst.`, descFullCss: `Die folgenden Werte m\xFCssen vollst\xE4ndig g\xFCltige Angaben f\xFCr CSS <code>color</code> sein.
                Es k\xF6nnen auch komplexe Kalkulationen oder die oben definierten CSS Variables 
                genutzt werden.`, descVariables: `Jede nachfolgende Beschriftung ist gleichzeitig der Name der CSS Variable. Das heisst,
                dass z.B. die freien Eingaben wiederum die Variablen referenzieren k\xF6nnen, z.B. mit
                <code>hsla(var(--action) / .7)</code>.` }, confidential: "Vertraulich", confidentialNoSecret: "Dies is kein vertraulicher Client und hat somit kein Secret.", config: "Client Konfiguration", delete1: "Soll dieser Client wirklich gel\xF6scht werden?", descAuthCode: `Die G\xFCltigkeit der Auth Codes kann angepasst werden um zus\xE4tzliche Sicherheit
            zu gewinnen. Auth Codes k\xF6nnen nur einmalig verwendet werden und sind normalerweise f\xFCr 60
            Sekunden g\xFCltig. Je k\xFCrzer, desto besser, so lange der Client den Code schnell genug nutzen kann.`, descClientUri: `Informationen \xFCber URI und Kontakte dieses Clients zur Anzeige
            auf der Login Seite.`, descName: `Der Client Name kann ge\xE4ndert werden ohne Einfluss auf die Konfiguration.
            Er dient lediglich der Anzeige auf der Login Seite.`, descOrigin: `Externe, zus\xE4tzlich erlaubte Origins - normalerweise nur notwendig, wenn dieser 
            Client direkt aus dem Browser heraus Requests zu Rauthy machen muss, typischerweise SPAs.`, descPKCE: `Wenn der Client Support f\xFCr PKCE hat, sollte zur zus\xE4tzlichen Sicherheit immer S256 
            PKCE aktiviert werden. Wenn ein nicht-vertraulicher Client (z.B. eine SPA) genutzt wird, muss
            mindestens eine PKCE Challenge aktiviert sein, um ausreichend Sicherheit bieten zu k\xF6nnen.`, descPKCEEnforce: `Wenn PKCE aktiviert ist, erzwingt Rauthy die Nutzung and verweigert Logins,
            die keine korrekte Challenge bereit stellen.`, descUri: `Es k\xF6nnen beliebig viele Redirect URIs angegeben werden. Am Ende einer Jeden wird 
            optional <code>*</code> als Wildcard akzeptiert.`, errConfidentialPKCE: `Der Client muss entweder vertraulich sein oder mindestens eine PKCE
            Challenge aktiviert haben.`, forceMfa: "MFA Erzwingen", generateSecret: "Neues Secret Generieren", name: "Client Name", scim: { baseUri: `Die SCIM base URI muss jene sein, von der Sub-Routen wie 
                <code>{base_uri}/Users/{id}</base_uri></code> korrekt abgeleitet werden k\xF6nnen.`, desc: "Sollte dieser client {{ SCIM_LINK }} unterst\xFCtzen, kann es hier aktiviert werden.", enable: "SCIMv2 aktivieren", groupSync: "Gruppen synchronisieren", groupSyncPrefix: "Gruppen Filter Prefix", groupSyncPrefixDesc: `Die zu synchronisierenden Gruppen k\xF6nnen per optionalem Prefix gefiltert werden.
                Wenn z.B. Gruppen wie <code>app:admins</code> und <code>app:users</code> existieren, w\xFCrde das
                Prefix <code>app:</code> daf\xFCr sorgen, dass nur diese Gruppen synchronisiert werden, wie auch nur
                jene Benutzer, die zu mindestens einer dieser Gruppen geh\xF6ren.`, reqDesc: "Es gibt folgende Bedingungen f\xFCr die Kompaibilit\xE4t:", reqLi1: "Der client muss <code>externalId</code> korrekt handhaben.", reqLi2: `Mindestens die <code>/Users</code> endpunkte mit <code>filter=externalId eq "*"</code> und
                <code>filter=userName eq "*"</code> m\xFCssen unterst\xFCtzt sein.`, reqLi3: `Wenn Gruppen sychronisiert werden sollen, so m\xFCssen unter <code>/Groups</code> zus\xE4tzlich 
                <code>filter=displayName eq "*"</code> unterst\xFCtzt sein.` }, scopes: { allowed: "Erlaubte Scopes", default: "Standard Scopes", desc: `Erlaubte Scopes sind diejenigen, die der Client dynamisch beim Redirect zum Login
            im <code>authorization_code</code> flow anfordern kann. Die standard Scopes werden hingegen immer
            hinzugef\xFCgt und k\xF6nnen Probleme l\xF6sen, wenn z.B. der <code>password</code> Flow verwendet
            wird.` }, tokenLifetime: { p1: "Die Token Lifetime wird auf Access und ID Tokens angewandt und wird in Sekunden angegeben.", p2: `Sollte der Client EdDSA / ed25519 Algorithmen unterst\xFCtzen, sollte dies die bevorzugte Wahl
                sein. RSA Algorithmen existieren lediglich aus Kompatibilit\xE4tsgr\xFCnden.`, p3: `Der Algorithmus f\xFCr Refresh Tokens kann nicht ge\xE4ndert werden, da diese nur von Rauthy
                genutzt werden sollten.` } }, common: { account: "Account", addNew: "Neu Hinzuf\xFCgen", back: "Zur\xFCck", contact: "Kontakt", copiedToClip: "Wert wurde in die Zwischenablage kopiert", details: "Details", edit: "Bearbeiten", enabled: "Aktiviert", filter: "Filter", from: "Von", information: "Informationen", language: "Sprache", loading: "Lade", name: "Name", nameExistsAlready: "Name existiert bereits", note: "Notiz", noEntries: "Keine Eintr\xE4ge", reset: "Zur\xFCcksetzen", search: "Suchen", searchOptions: "Suchoptionen", until: "Bis" }, docs: { book: "F\xFCr generelle Dokumentation f\xFCr Rauthy existiert das", encryption: "Verschl\xFCsselung", encKeys: { header: "Encryption Keys", keyActive: "Aktiver Key", keysAvailable: "Verf\xFCgbare Keys", migrate: "Migrieren", migrateToKey: "Migriere alle Werte zu folgendem Encryption Key", p1: `Diese Schl\xFCssel werden f\xFCr die zus\xE4tzliche Verschl\xFCsselung in verschiedenen Situationen genutzt, wie 
            z.B. gewisse Werte innerhalb der Datenbank oder Session Cookies. Sie sind statisch konfiguriert, aber k\xF6nnen
            als best-practice manuell rotiert werden.`, p2: `Der aktive Schl\xFCssel ist ebenfalls statisch im Rauthy config file gesetzt. Alle neu-verschl\xFCsselten
            Werte werden mit dem aktiven Schl\xFCssel verschl\xFCsselt, w\xE4hrend alte zur R\xFCckw\xE4rts-Kompatibilit\xE4t parallel
            existieren k\xF6nnen.`, p3: `Das Migrieren aller verschl\xFCsselten Werte an dieser Stelle kann, je nach System, einige Zeit in 
            Anspruch nehmen.`, pNotPossible: "Zur Migration m\xFCssen mindestens 2 Encryption Keys vorhanden sein." }, hashing: { calculate: "Berechnen", currValuesHead: "Derzeitige Werte", currValues1: "Die derzeitigen im Backend konfigurierten Werte sind die folgenden:", currValuesNote: `Notiz: Die Login Zeit vom Backend wird nur dann eine gute Richtlinie sein, nachdem 
            mindestens 5 erfolgreiche Logins seit dem letzten Neustart gemacht wurden. Der Ausgangswert ist immer 
            2000 ms und wird mit jedem erfolgreichen Login neu gemittelt.`, currValuesThreadsAccess: "Threads (p_cost) die Rauthy zur Verf\xFCgung stehen", loginTimeHead: "Ein paar Worte zur Login Zeit", loginTime1: `Generell m\xF6chten User alles so schnell wie m\xF6glich. F\xFCr eine sichere Login Prozedur jedoch
            sollte mindestens eine Dauer von 500 - 1000 ms anvisiert werden and kein Problem darstellen. Die Zeit zum
            Passwort Hashing darf nicht zu kurz gew\xE4hlt werden, weil dadurch die St\xE4rke des Hashes reduziert werden 
            w\xFCrde.`, loginTime2: `Um standardm\xE4\xDFig gen\xFCgend Sicherheit zu gew\xE4hrleisten, erlaubt dieses Tool keine kleineren
            Werte als 500 ms f\xFCr die Login Zeit.`, mCost1: `Die <code>m_cost</code> definiert die Menga an <b>Speicher (in kB)</b> die zum Hashing verwendet
            wird. Je h\xF6her dieser Wert, umso besser (sicherer), aber die notwendigen Ressourcen m\xFCssen nat\xFCrlich 
            vorhanden sein.<br>
            Wenn z.B. 4 Passw\xF6rter zur selben Zeit gehasht werden, wird selbstverst\xE4ndlich <code>4 x m_cost</code>
            an Speicher ben\xF6tigt, was zu jeder Zeit zur Verf\xFCgung stehen muss.`, mCost2: `Den "richtigen" Wert f\xFCr <code>m_cost</code> zu finden ist gl\xFCcklicherweise sehr einfach. Definiere
            das Maximum an Speicher, das Rauthy nutzen sollte, dividiere die Menge durch die Anzahl paralleler Logins, 
            die m\xF6glich sein sollten (<code>MAX_HASH_THREADS</code>) und ziehe hier von eine gewisse statische Menge ab.
            Die H\xF6he des statisch ben\xF6tigten Speichers h\xE4ngt von der gew\xE4hlten Datenbank und Anzahl Benutzer ab, jedoch
            wird sie in den meisten F\xE4llen im Bereich von 32 - 96 MB sein.`, pCost1: `<code>p_cost</code> definiert den Parallelismus f\xFCrs Hashing.<br>
            In den meisten F\xE4llen erh\xF6hen Werte jenseits von 8 nichts mehr die ben\xF6tigte Zeit, weil der Algorithmus
            ges\xE4ttigt sein wird. Dies ist auch der Standardwert f\xFCr Rauthy.`, pCost2: `Die generelle Regel lautet:<br>
            Setze <code>p_cost</code> auf den zweifachen Wert der verf\xFCgbares CPU Kerne.<br>
            Wenn z.B. 4 Kerne zur Verf\xFCgung stehen, w\xE4re eine <code>p_cost</code> von 8 ein guter Wert.<br>
            Der Wert muss allerdings die maximale Anzahl parallel erlaubter Logins (<code>MAX_HASH_THREADS</code>) 
            ber\xFCcksichtigen und ggf. entsprechend reduziert werden.`, tCost1: `<code>t_cost</code> ist ein Multiplikator f\xFCr die <b>Zeit</b> f\xFCrs Hashing. Dies ist der einzige
            Wert, der durch Testen auf der Zielarchitektur gefunden werden muss, weil <code>m_cost</code> und 
            <code>p_cost</code> gewissenerma\xDFen vorgegeben sind.`, tCost2: `Das Finden des Wertes ist einfach: Setze <code>m_cost</code> und <code>p_cost</code> wie oben
            erkl\xE4rt und erh\xF6he <code>t_cost</code> so lange, bis die gew\xFCnschte Login Zeit erreicht wird.`, utilityHead: "Parameter Berechnungs-Werkzeug", utility1: `Das folgende Werkzeug kann zum Finden passender Werte f\xFCr dieses Rauthy deployment genutzt 
            werden. Da die Werte von sehr vielen Faktoren abh\xE4ngen, sollten dieser auf der finalen Architektur 
            eingestellt werden, am besten zu Zeiten der am h\xF6chsten erwarteten Last, um keine zu hohen Werte 
            einzustellen.`, utility2: `<code>m_cost</code> ist Optional und der als minimal sichere Wert von 32768 w\xFCrde automatisch
            gew\xE4hlt werden. Sollte <code>p_cost</code> ebenfalls nicht gegeben sein, so wird Rauthy die maximal 
            verf\xFCgbare Menge and Kernen nutzen.`, time: "Zeit", targetTime: "Ziel-Zeit", tune: "Wichtig: Diese Werten m\xFCssen auf der finalen Architektur eingestellt werden!", pDetials: `F\xFCr eine detailiertere Einf\xFChrung in den Argon2ID Alrogithmus stehen vielen Quellen online zur
            Verf\xFCgung. Hier werden nur ganz kurz die Werte erkl\xE4rt. Die folgenden drei Werte m\xFCssen konfiguriert werden:`, pTune: `Die Werte k\xF6nnen stark variieren in Abh\xE4ngigkeit vom System und der generellen Systemlast. Je 
            st\xE4rker das System, desto sicherere Werte k\xF6nnen gew\xE4hlt werden.`, pUtility: `Dieses Werkzeug ist eine Hilfe zum Finden der besten Argon2ID Werte f\xFCr das jeweilige System.
            Argon2ID is der derzeit sicherste, verf\xFCgbare Passwort Hashing Algorithmus. Um das volle Potential 
            aussch\xF6pfen zu k\xF6nnen, m\xFCssen die Werte allerdings auf das System angepasst werden.`, mCost3: "Der minimal erlaubte Wert f\xFCr <code>m_cost</code> ist <code>32768</code>." }, openapi: "Zur Integration einer externen Applikation via Rauthy's API gibt es das", openapiNote: `In Abh\xE4ngigkeit von der Konfiguration ist das Swagger  UI nicht \xF6ffentlich zug\xE4nglich \xFCbber den
            oben genannten Link. Es ist allerdings (standardm\xE4\xDFig) \xFCber den internen metrics server verf\xFCgbar zur
            Reduzierung der Angriffsfl\xE4che.`, source: "Der source code kann hier gefunden werden" }, error: { needsAdminRole: "Um Zugriff zu erhalten ist die Rolle <b>rauthy_admin</b> notwendig.", noAdmin: `F\xFCr Rauthy Admin Accounts ist <b>MFA Pflicht.</b><br>
            Im <b>Account</b> kann ein Passkey hinterlegt und MFA aktiviert werden.<br>
            Danach muss ein Logout und neuer Login folgen` }, events: { eventLevel: "Event Level", eventType: "Event Typ" }, groups: { delete1: "Soll diese Gruppe wirklich gel\xF6scht werden?", name: "Gruppenname" }, jwks: { alg: "Algorithmus", p1: "Dies sind die Json Web Keys (JWKs) die f\xFCr das Signieren der Tokens genutzt werden.", p2: `JWKs werden standardm\xE4\xDFig automatisch an jedem 1. des Monats rotiert. F\xFCr alle neuen Tokens wird 
        immer die aktuellste Version eines Keys f\xFCr den jeweiligen Algorithmus verwerndet. Alte Keys werden f\xFCr 
        eine Weile behalten um bestehende Tokens validieren zu k\xF6nnen und nach einer gewissen Zeit automatisch gel\xF6scht.`, p3: `Die Keys k\xF6nnen manuell rotiert werden. Abh\xE4ngig von der Hardware auf der diese Rauthy Instanz l\xE4uft,
        kann dies einige Sekunden in Anspruch nehmen.`, type: "Typ", rotateKeys: "Keys Rotieren" }, nav: { apiKeys: "API Keys", attributes: "Attribute", blacklist: "Blacklist", clients: "Clients", config: "Konfiguration", docs: "Dokumentation", events: "Events", groups: "Gruppen", providers: "Provider", roles: "Rollen", scopes: "Scopes", sessions: "Sessions", users: "Benutzer" }, options: { expires: "Erlischt", lastSeen: "Zuletzt Gesehen", state: "Status" }, passwordPolicy: { configDesc: "Regeln f\xFCr neue Passw\xF6rter.", resetSet0: "Der Wert 0 deaktiviert die Bedingung.", validForDays: "G\xFCltigkeit Tage", validityNew: "G\xFCltigkeit f\xFCr neue Passw\xF6rter." }, providers: { config: { allowInsecureTls: "Erlaube unsicheres TLS", clientName: "Client Name", custRootCa: "Eigenes Root CA PEM", descAuthMethod: `Die Authentication Method, welche f\xFCr den <code>/token</code> Endpunkt genutzt werden soll.
                Die meisten Provider sollten mit <code>basic</code> funktionieren, manche jedoch nur mit 
                <code>post</code>. In seltenen F\xE4llen m\xFCssen beide Optionen aktiviert werden, auch wenn es gegen das
                RFC verst\xF6\xDFt.`, descClientId: "Client ID, vom Auth Provider vorgegeben.", descClientName: "Client Name der auf der Rauthy Login Form angezeigt werden soll.", descClientSecret: `Client Secret, vom Auth Provider vorgegeben.
                Es muss mindestens ein Secret gegeben, oder PKCE aktiviert sein.`, descScope: `Der scope der beim Redirect zum Login genutzt werden soll. Werte m\xFCssen durch Leerzeichen
                getrennt angegeben werden`, errNoAuthMethod: "Ein client secret existiert, jedoch ist keine auth Methode aktiv", errConfidential: "Es muss mindestens entweder ein client secret existieren oder PKCE aktiv sein.", jsonPath: { p1: "Werte aus dem ID Token nach einem erfolgreichen Upstream Login k\xF6nnen automatisch gemapped werden.", p2: `Der <code>Pfad</code> muss in korrekter Regex Syntax angegeben werden. Er kann auf einzelne JSON
                    Werte verweise, oder komplexe Sturkturen wie Arrays oder Objects`, p3: "<code>$.</code> markiert den Beginn eines JSON Objects", p4: "<code>*</code> kann als Wildcard innerhalb des Pfads genutzt werden", p5: '<code>$.roles</code> h\xE4tte als Ziel den Wert <code>&#123;"roles": "value"&#125;</code>', p6: `<code>$.roles.*</code> kann auf einen Wert innerhalb eines Arrays oder Objects wie z.B.<br>
                    <code>&#123;"roles": ["value", "notMyValue"]&#125;</code> verweisen` }, lookup: "Pr\xFCfen", pathAdminClaim: "Admin Claim Pfad", pathMfaClaim: "MFA Claim Pfad", rootPemCert: "Root PEM Zertifikat", mapMfa: `Sollte der Auth Provider in ID Claim bereit stellen, welches anzeigt, ob eine Art 2FA oder MFA
                beim Login verwandt wurde, so kann Rauthy diesen Werten extrahieren und entsprechend weitergeben.`, mapUser: `Es kann beim Login automatisch ein Nutzer mit der Rauthy Admin Rolle verlinkt werden, in
                Abh\xE4ngigkeit von einem existierenden Upstream ID Claim.`, valueAdminClaim: "Admin Claim Wert", valueMfaClaim: "MFA Claim Wert" }, delete: { areYouSure: "Sicher, dass dieser Provider gel\xF6scht werden soll?", forceDelete: "L\xF6schen Erzwingen", isInUse1: "Dieser Provider wird von aktiven Nutzern verwendet!", isInUse2: `Das L\xF6schen kann erzwungen werden. Nutzer ohne lokales Passwort oder
                Passkey werden jedoch nicht mehr in der Lage sein, sich einzuloggen.`, linkedUsers: "Verbundene Nutzer" } }, roles: { adminNoMod: "Die <code>rauthy_admin</code> Rolle kann nicht ver\xE4ndert werden.", delete1: "Soll diese Rolle wirklich gel\xF6scht werden?", name: "Rollenname" }, scopes: { defaultNoMod: "Dies ist ein Default OIDC Scope. Diese sind unver\xE4nderbar.", delete1: "Soll dieser Scope wirklich gel\xF6scht werden?", deleteDefault: "OIDC default scopes cannot be deleted", mapping1: "Benutzer Attribute k\xF6nnen auf eigene Scopes gemapped werden.", mapping2: `Jedes existierende Attribut hat einen eigenst\xE4ndigen Wert pro User. Diese Attribute k\xF6nnen
            auf einen Scope gemapped werden und werden in diesem Fall im Access bzw. ID Token enthalten sein.`, name: "Scope Name" }, sessions: { invalidateAll: "Alle Sessions Invalidieren" }, search: { orderBy: "Sortieren nach ...", orderChangeToAsc: "Zu aufsteigender Sortierung wechseln", orderChangeToDesc: "Zu absteigende Sortierung wechseln" }, tabs: { config: "Konfiguration", delete: "L\xF6schen" }, users: { attributes: "Attribute", deleteUser: "Soll dieser Benutzer wirklich gel\xF6scht werden?", descAttr: `Setze individuelle Benutzer Attribute. Alle Key / Value Paare 
            werden als String / JSON Wert gehandhabt.`, forceLogout: `Sollen s\xE4mtliche, f\xFCr diesen Benutzer existierenden Sessions invalidiert und 
            Refresh Tokens gel\xF6scht werden?`, lastLogin: "Letzter Login", mfaDelete1: "Die Passkeys dieses Nutzers k\xF6nnen gel\xF6scht werden.", mfaDelete2: `Vorsicht! Das L\xF6schen eines Keys <b>kann nicht r\xFCckg\xE4ngig gemacht werden</b>, ohne
            dass der Benutzer die Registrierung erneut durchf\xFChrt.`, noMfaKeys: "Dieser Benutzer hat keine registrierten Passkeys.", pkOnly1: "Dies ist ein Passkey-Only Account.", pkOnly2: "Das bedeutet, dass dieser Benutzer den passwortlosen Login nutzt und kein Passwort gesetzt hat.", pkOnly3: `Sollte dieser Benutzer alle Passkeys verloren haben, kann der Account vollst\xE4ndig resettet und eine
            Password Reset E-Mail versendet werden. Um dies zu tun, m\xFCssen vorher unter dem Reiter 'MFA' s\xE4mtliche
            Passkeys gel\xF6scht werden.`, pwdNoInit: "Der Benutzer hat noch nicht den initialien Passwort Reset durchgef\xFChrt.", pwdSendEmailBtn: "Reset E-Mail Senden", pwdSendEmailDesc: "Es kann eine neue Reset E-Mail gesendet werden, sollte der Benutzer keine erhalten haben.", savePassword: "Passwort Speichern", selfServiceDesc: "Es kann entweder ein neues Passwort gesetzt, order eine Reset E-Mail versendet werden.", sendResetEmail: "Reset E-Mail Senden" }, validation: { css: "G\xFCltiger CSS Wert", origin: "G\xFCltige Origin", uri: "G\xFCltige URI" } }, i = { api_key: { delete1: "Are you sure, that you want to delete this API Key?", expires: "Expiry", generate1: "Here you can generate a new secret for this API Key.", generate2: `You will only see this secret once after the generation.
            When a new one has been generated, the old secret will be overridden permanently.
            This operation cannot be reverted!`, generate3: `An API Key must be provided in the HTTP <code>Authorization</code>
            header in the following format:`, generate4: "You can use the following <code>curl</code> request to test your new Key:", generate5: "If you don't have <code>jq</code> installed and the above fails:", keyName: "Key Name", limitedValidity: "Limited Validity" }, attrs: { delete1: "Are you sure you want to delete this attribute?", desc: "Description", name: "Attribute Name" }, clients: { backchannelLogout: "If this client supports {{ OIDC_BCL }}, you can provide the URI here.", branding: { descHsl: `The following values must be given as HSL values. You only provide the base colors.
            Alpha channels and other values are manipulated dynamically by the theme.`, descFullCss: `The following values must be fully valid CSS <code>color</code> values.
                You can also use complex calculations or the above defined CSS variables.`, descVariables: `Each following label is at the same time the name of the CSS variable. This means,
                that you can reference these in the free inputs, e.g. with <code>hsla(var(--action) / .7)</code>.` }, confidential: "Confidential", confidentialNoSecret: "This is a non-confidential client and therefore has not secret.", config: "Client Configuration", delete1: "Are you sure you want to delete this client?", descAuthCode: `The validity for auth codes can be adjusted for increased security. Auth codes
            can be used only once and are valid for 60 seconds by default. The shorter the validity, the
            better, as long as the client can perform the login procedure fast enough.`, descClientUri: `Information about this clients URI and contacts to be shown on
            the login page.`, descName: `The client name can be changed without any impact on the client configuration.
            It only exists to be shown on the login page.`, descOrigin: `External, additionally allowed origins - usually only necessary, if this client
            needs to make requests to Rauthy directly from the browser, typically SPAs.`, descPKCE: `If the client supports it, you should always activate S256 PKCE for additional 
            security. If a non-confidential client (e.g. a SPA) is being used, you must at least 
            activate one of the PKCE challenges to have enough security.`, descPKCEEnforce: `If any PKCE is activated, Rauthy will enforce the usage during Logins, and
            rejects login request that do not contain a valida challenge.`, descUri: `You can provide as many redirect URIs as you like. At the end of each, you can use 
            <code>*</code> as a Wildcard.`, errConfidentialPKCE: `The client must either be confidential or have at least one PKCE
            challenge activated.`, forceMfa: "Force MFA", generateSecret: "Generate New Secret", name: "Client Name", scim: { baseUri: `The SCIM base URI is the one from which the sub routes like 
                <code>{base_uri}/Users/{id}</base_uri></code> can be derived correctly.`, desc: "If this client supports {{ SCIM_LINK }}, you can activate it here.", enable: "Enable SCIMv2", groupSync: "Synchronize Groups", groupSyncPrefix: "Groups Filter Prefix", groupSyncPrefixDesc: `You can filter the groups for the synchronization by an optional prefix.
                For instance, if the groups <code>app:admins</code> and <code>app:users</code> exist, the prefix
                 <code>app:</code> would only sync these groups, as well as only those users that are linked to at least
                 one of these groups.`, reqDesc: "A few things are required for compatibility:", reqLi1: "The client must handle <code>externalId</code> correctly.", reqLi2: `At least <code>/Users</code> endpoints with <code>filter=externalId eq "*"</code> and
                <code>filter=userName eq "*"</code> must be supported.`, reqLi3: `If groups should be synchronized, <code>/Groups</code> must also support 
                <code>filter=displayName eq "*"</code>.` }, scopes: { allowed: "Allowed Scopes", default: "Default Scopes", desc: `Allowed Scopes are the ones the client is allowed to request dynamically during
            a redirect to the login when using the <code>authorization_code</code> flow. The default
            scopes will always be added to the tokens to solve some issues when using the 
            <code>password</code> for instance.` }, tokenLifetime: { p1: "The token lifetime applies to Access and ID tokens and is given in seconds.", p2: `If the client supports EdDSA / ed25519 algorithms, it should always be the preferred
                choice. RSA algorithms exist for compatibility only.`, p3: "The algorithm for refresh tokens cannot be changed, since these are used by Rauthy only." } }, common: { account: "Account", addNew: "Add New", back: "Back", contact: "Contact", copiedToClip: "Value has been copied to clipboard", details: "Details", edit: "Edit", enabled: "Enabled", filter: "Filter", from: "From", information: "Information", language: "Language", loading: "Loading", name: "Name", nameExistsAlready: "Name exists already", note: "Note", noEntries: "No Entries", reset: "Reset", search: "Search", searchOptions: "Search Options", until: "Until" }, docs: { book: "For general documentation about Rauthy itself, you should take a look at the", encryption: "Encryption", encKeys: { header: "Encryption Keys", keyActive: "Active Key", keysAvailable: "Available Keys", migrate: "Migrate", migrateToKey: "Migrate all existing encrypted values to the following key", p1: `These Keys are used for an additional encryption at rest, independently from any data store technology 
            used under the hood. They are configured statically, but can be rotated and migrated on this page manually.`, p2: `The active key is statically set in the Rauthy config file / environment variables. It cannot be changed
            here dynamically. All new JWK encryption's will always use the currently active key.`, p3: `If you migrate all existing secrets, it might take a few seconds to finish, if you have a big 
            dataset.`, pNotPossible: "To be able to migrate, at least 2 encryption keys need to be available." }, hashing: { calculate: "Calculate", currValuesHead: "Current values", currValues1: "The current values from the backend are the following:", currValuesNote: `Note: The Login Time from the backend does only provide a good guideline after at least 5 
            successful logins, after Rauthy has been started. The base value is always 2000 ms after a fresh restart 
            and will adjust over time with each successful login.`, currValuesThreadsAccess: "Threads (p_cost) Rauthy has access to", loginTimeHead: "A word about Login Time", loginTime1: `Generally, users want everything as fast as possible. When doing a safe login though, a time 
            between 500 - 1000 ms should not be a problem. The login time must not be too short, since it would lower 
            the strength of the hash, of course.`, loginTime2: `To provide as much safety by default as possible, this utility does not allow you to go below 
            500 ms for the login time.`, mCost1: `The <code>m_cost</code> defines the amount of <b>memory (in kB)</b>, which is used for the hashing.
            The higher the value, the better, of course. But you need to keep in mind the servers resources.<br>
            When you hash 4 passwords at the same time, for instance, the backend needs <code>4 x m_cost</code>
            during the hashing. These resources must be available.`, mCost2: `Tuning <code>m_cost</code> is pretty easy. Define the max amount of memory that Rauthy should use,
            divide it by the number of max allowed parallel logins (<code>MAX_HASH_THREADS</code>) and subtract a small 
            static amount of memory. How much static memory should be taken into account depends on the used database
            and the total amount of users, but will typically be in the range of 32 - 96 MB.`, mCost3: "The minimal allowed <code>m_cost</code> is <code>32768</code>.", pCost1: `The <code>p_cost</code> defines the amount of <b>parallelism</b> for hashing. This value most often 
            tops out at ~8, which is the default for Rauthy.`, pCost2: `The general rule is:<br>
            Set the <code>p_cost</code> to twice the size of cores your have available.<br>
            For instance, if you have 4 cores available, set the <code>p_cost</code> to <code>8</code>.<br>
            However, this value must take the configured allowed parallel logins (<code>MAX_HASH_THREADS</code>) into
            account and be reduced accordingly.`, tCost1: `The <code>t_cost</code> defines the amount of <b>time</b> for hashing. This value is actually the 
            only value, that needs tuning, since <code>m_cost</code> and <code>p_cost</code> are basically given by the 
            environment.`, tCost2: `Tuning is easy: Set <code>m_cost</code> and <code>p_cost</code> accordingly and then increase
            <code>t_cost</code> as long as you have not reached your hashing-time-goal.`, utilityHead: "Parameter Calculation Utility", utility1: `You can use this tool to approximate good values for your deployment. Keep in mind, that this 
            should be executed with Rauthy in its final place with all final resources available. You should execute 
            this utility during load to not over tune.`, utility2: `<code>m_cost</code> is optional and the safe minimal value of <code>32768</code> would be chosen, 
            if empty. <code>p_cost</code> is optional too and Rauthy will utilize all threads it can see, if empty.`, time: "Time", targetTime: "Target Time", tune: "Important: These values need to be tuned on the final architecture!", pDetials: `If you want a detailed introduction to Argon2ID, many sources exist online. This guide just 
            gives very short overview about the values. Three of them need to be configured:`, pTune: `They change depending on the capabilities of the system. The more powerful the system, the more safe 
            these values can be.`, pUtility: `This utility helps you find the best Argon2ID settings for your platform.
            Argon2ID is currently the safest available password hashing algorithm. To use it to its fullest potential, 
            it has to be tuned for each deployment.` }, openapi: "If you want to integrate an external application and use Rauthy's API, take a look at the", openapiNote: `Depending on the backend configuration, the Swagger UI may not be exposed publicly at this point.
            It is however by default available via the internal metrics HTTP server to not expose any 
            information.`, source: "The source code can be found here" }, error: { needsAdminRole: `You are not assigned to the <b>rauthy_admin</b> role.<br/>
            You do not have access to the admin panel.`, noAdmin: `A Rauthy admin account must have <b>MFA enabled.</b><br>
            Please navigate to your <b>account</b> and activate MFA.<br>
            Afterward, you need to do a logout and log back in.` }, events: { eventLevel: "Event Level", eventType: "Event Type" }, groups: { delete1: "Are you sure you want to delete this group?", name: "Group Name" }, jwks: { alg: "Algorithm", p1: "These are the Json Web Keys (JWKs) used for token singing.", p2: `The JWKs will be rotated by default every 1st of a month. For all newly created tokens, only the latest
        available key for the given algorithm will be used for signing. Old keys will be kept for a while to make sure
        that currently valid tokens can still be validated properly. After a while, they will be cleaned up 
        automatically.`, p3: `Keys can also be rotated manually. Depending on the hardware this Rauthy instance is running on, it might
        take a few seconds.`, type: "Type", rotateKeys: "Rotate Keys" }, nav: { apiKeys: "API Keys", attributes: "Attributes", blacklist: "Blacklist", clients: "Clients", config: "Config", docs: "Docs", events: "Events", groups: "Groups", providers: "Providers", roles: "Roles", scopes: "Scopes", sessions: "Sessions", users: "Users" }, options: { expires: "Expires", lastSeen: "Last Seen", state: "State" }, passwordPolicy: { configDesc: "Policy for new passwords.", resetSet0: "The value 0 deactivates the requirement.", validForDays: "Valid For Days", validityNew: "Validity for new passwords." }, providers: { config: { allowInsecureTls: "Allow insecure TLS", clientName: "Client Name", custRootCa: "Custom Root CA PEM", descAuthMethod: `The authentication method to use on the <code>/token</code> endpoint.<br>
                Most providers should work with <code>basic</code>, some only with <code>post</code>.
                In rare situations, you need both, while it can lead to errors with others.`, descClientId: "Client ID given by the auth provider.", descClientName: "Client name that should be shown on the Rauthy login page.", descClientSecret: `Client Secret given by the auth provider.
                At least a client secret or PKCE is required.`, descScope: `The scope the client should use when redirecting to the login.
                Provide the values separated by space.`, errNoAuthMethod: "You have given a client secret, but no client auth method is active", errConfidential: "Must at least be a confidential client or use PKCE", jsonPath: { p1: "Values from the ID token after a successful upstream login can be mapped automatically.", p2: `The <code>path</code> needs to be given in a regex like syntax. It can resolve to
                    single JSON values or resolve to a value in a JSON object or array.`, p3: "<code>$.</code> marks the start of the JSON object", p4: "<code>*</code> can be used as a wildcard in your path", p5: '<code>$.roles</code> would target <code>&#123;"roles": "value"&#125;</code>', p6: `<code>$.roles.*</code> can target a value inside an object or array like<br>
                    <code>&#123;"roles": ["value", "notMyValue"]&#125;</code>` }, lookup: "Lookup", pathAdminClaim: "Admin Claim Path", pathMfaClaim: "MFA Claim Path", rootPemCert: "Root PEM Certificate", mapMfa: `If your provider issues a claim indicating that the user has used at least 2FA during
                login, you can specify the mfa claim path.`, mapUser: "You can map a user to be a Rauthy admin depending on an upstream ID claim.", valueAdminClaim: "Admin Claim Value", valueMfaClaim: "MFA Claim Value" }, delete: { areYouSure: "Are you sure you want to delete this provider?", forceDelete: "Force Delete", isInUse1: "This provider is in use by active users!", isInUse2: `You can force delete it, but users without a local password or passkey
                will not be able to log in anymore.`, linkedUsers: "Linked Users" } }, roles: { adminNoMod: "The <code>rauthy_admin</code> role is immutable.", delete1: "Are you sure you want to delete this role?", name: "Role Name" }, scopes: { defaultNoMod: "This is a default OIDC Scope. These are immutable.", delete1: "Are you sure you want to delete this scope?", deleteDefault: "OIDC Default Scopes k\xF6nnen nicht gel\xF6scht werden.", mapping1: "You can map custom scopes to attributes.", mapping2: `All additional attributes, that were configured, can have a custom value for each user.
            When they are mapped to a scope, they can be included in the Access and / or ID Tokens.`, name: "Scope Name" }, search: { orderBy: "Order by ...", orderChangeToAsc: "Change sort to ascending", orderChangeToDesc: "Change sort to descending" }, sessions: { invalidateAll: "Invalidate All Sessions" }, tabs: { config: "Config", delete: "Delete" }, users: { attributes: "Attributes", deleteUser: "Are you sure you want to delete this user?", descAttr: "Set custom user attributes. All key / value pairs will be handles as String / JSON Value.", forceLogout: `Are you sure you want to invalidate all existing sessions and delete all refresh tokens
            for this user?`, lastLogin: "Last Login", mfaDelete1: "You can delete Passkeys for this users.", mfaDelete2: `Caution! The deletion of a Passkey <b>cannot be reverted</b> without the user
            doing a fully new registration.`, noMfaKeys: "This user has no registered Passkeys.", pkOnly1: "This is a passkey-only account.", pkOnly2: "This means that this user uses the passwordless login and has no password set at all.", pkOnly3: `If this user has lost all Passkeys, the account can be fully reset and a new password reset E-Mail
            can be sent. To achieve this, navigate to the 'MFA' tab an delete all existing passkeys.`, pwdNoInit: "The user has not performed the initial password reset yet.", pwdSendEmailBtn: "Send Reset E-Mail", pwdSendEmailDesc: "You may send out a new reset E-Mail, if the user has not received one.", savePassword: "Save Password", selfServiceDesc: "You can either set a new password, or send out a reset E-Mail.", sendResetEmail: "Send Reset E-Mail" }, validation: { css: "Valid CSS Value", origin: "Valid Origin", uri: "Valid URI" } }, s = { api_key: { delete1: "\uC774 API \uD0A4\uB97C \uC0AD\uC81C\uD558\uC2DC\uACA0\uC2B5\uB2C8\uAE4C?", expires: "\uB9CC\uB8CC\uC77C", generate1: "\uC774 API \uD0A4\uC5D0 \uB300\uD55C \uC0C8 Secret\uC744 \uC0DD\uC131\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.", generate2: `\uC774 Secret\uC740 \uC0DD\uC131 \uC774\uD6C4 \uB2E8 \uD55C \uBC88\uB9CC \uBCFC \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC0C8 Secret\uC774 \uC0DD\uC131\uB418\uBA74 \uC774\uC804 Secret\uC740
            \uC0AC\uC6A9\uD560 \uC218 \uC5C6\uC73C\uBA70, \uC774 \uC791\uC5C5\uC740 \uB418\uB3CC\uB9B4 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4!`, generate3: "API \uD0A4\uB294 HTTP <code>Authorization</code> \uD5E4\uB354\uC5D0 \uB2E4\uC74C\uACFC \uAC19\uC740 \uD615\uC2DD\uC73C\uB85C \uC81C\uACF5\uD574\uC57C \uD569\uB2C8\uB2E4.", generate4: "\uC544\uB798\uC758 <code>curl</code> \uC694\uCCAD\uC73C\uB85C \uD14C\uC2A4\uD2B8\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.", generate5: "<code>jq</code> \uAC00 \uC124\uCE58\uB418\uC5B4 \uC788\uC9C0 \uC54A\uAC70\uB098 \uC704\uC758 \uCF54\uB4DC\uAC00 \uC2E4\uD328\uD55C \uACBD\uC6B0\uB294 \uC544\uB798 \uCF54\uB4DC\uB97C \uC0AC\uC6A9\uD558\uC138\uC694.", keyName: "API \uD0A4 \uC774\uB984", limitedValidity: "\uB9CC\uB8CC\uC77C" }, attrs: { delete1: "\uC774 \uC18D\uC131\uC744 \uC0AD\uC81C\uD558\uC2DC\uACA0\uC2B5\uB2C8\uAE4C?", desc: "\uC124\uBA85", name: "\uC18D\uC131 \uC774\uB984" }, clients: { backchannelLogout: "If this client supports {{ OIDC_BCL }}, you can provide the URI here.", branding: { descHsl: `HSL \uAC12\uC73C\uB85C \uC785\uB825\uD574\uC57C \uD569\uB2C8\uB2E4. \uAE30\uBCF8 \uC0C9\uC0C1\uB9CC \uC81C\uACF5\uD558\uBA74 \uC54C\uD30C \uCC44\uB110 \uBC0F \uAE30\uD0C0 \uAC12\uC740
                \uD14C\uB9C8\uC5D0 \uC758\uD574 \uB3D9\uC801\uC73C\uB85C \uC124\uC815\uB429\uB2C8\uB2E4.`, descFullCss: `\uB2E4\uC74C \uAC12\uC740 \uC644\uC804\uD788 \uC720\uD6A8\uD55C <code>CSS \uC0C9\uC0C1</code> \uAC12\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4. \uBCF5\uC7A1\uD55C \uACC4\uC0B0\uC774\uB098 \uC704\uC5D0
                \uC815\uC758\uB41C <code>CSS \uBCC0\uC218</code> \uB97C \uC0AC\uC6A9\uD560 \uC218\uB3C4 \uC788\uC2B5\uB2C8\uB2E4.`, descVariables: `\uC0C9\uC0C1\uC758 \uAC01 \uB808\uC774\uBE14\uB4E4\uC740 \uB3D9\uC2DC\uC5D0 CSS \uBCC0\uC218\uC758 \uC774\uB984\uC785\uB2C8\uB2E4. \uC989, \uC785\uB825 \uCE78\uC5D0\uC11C \uC774\uB97C \uCC38\uC870\uD560 \uC218
                \uC788\uC2B5\uB2C8\uB2E4. (\uC608: <code>hsla(var(--action) / .7)</code>)` }, confidential: "\uAE30\uBC00", confidentialNoSecret: "\uC774 \uD074\uB77C\uC774\uC5B8\uD2B8\uB294 \uAE30\uBC00\uC774 \uC544\uB2CC \uD074\uB77C\uC774\uC5B8\uD2B8\uC774\uBBC0\uB85C Secret\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.", config: "\uD074\uB77C\uC774\uC5B8\uD2B8 \uC124\uC815", delete1: "\uC774 \uD074\uB77C\uC774\uC5B8\uD2B8\uB97C \uC0AD\uC81C\uD558\uC2DC\uACA0\uC2B5\uB2C8\uAE4C?", descAuthCode: `\uBCF4\uC548\uC744 \uAC15\uD654\uD558\uAE30 \uC704\uD574 \uC778\uC99D \uCF54\uB4DC\uC758 \uC720\uD6A8 \uAE30\uAC04\uC744 \uC870\uC815\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC778\uC99D \uCF54\uB4DC\uB294
            \uD55C \uBC88\uB9CC \uC0AC\uC6A9\uD560 \uC218 \uC788\uC73C\uBA70 \uAE30\uBCF8\uC801\uC73C\uB85C 60\uCD08 \uB3D9\uC548 \uC720\uD6A8\uD569\uB2C8\uB2E4. \uD074\uB77C\uC774\uC5B8\uD2B8\uAC00 \uB85C\uADF8\uC778 \uC808\uCC28\uB97C
            \uCDA9\uBD84\uD788 \uBE60\uB974\uAC8C \uC218\uD589\uD560 \uC218 \uC788\uB2E4\uBA74 \uC720\uD6A8 \uAE30\uAC04\uC774 \uC9E7\uC744\uC218\uB85D \uC88B\uC2B5\uB2C8\uB2E4.`, descClientUri: "\uB85C\uADF8\uC778 \uD398\uC774\uC9C0\uC5D0 \uD45C\uC2DC\uD560 \uD074\uB77C\uC774\uC5B8\uD2B8 URI \uBC0F \uC5F0\uB77D\uCC98\uC5D0 \uB300\uD55C \uC815\uBCF4\uC785\uB2C8\uB2E4.", descName: `\uD074\uB77C\uC774\uC5B8\uD2B8 \uC774\uB984\uC740 \uD074\uB77C\uC774\uC5B8\uD2B8 \uAD6C\uC131\uC5D0 \uC601\uD5A5\uC744 \uC8FC\uC9C0 \uC54A\uACE0 \uBCC0\uACBD\uD560 \uC218 \uC788\uC73C\uBA70,
            \uB85C\uADF8\uC778 \uD398\uC774\uC9C0\uC5D0\uC11C\uB9CC \uD45C\uC2DC\uB429\uB2C8\uB2E4.`, descOrigin: `\uCD94\uAC00\uB85C \uD5C8\uC6A9\uB418\uB294 \uC678\uBD80 \uC624\uB9AC\uC9C4\uC744 \uC124\uC815\uD569\uB2C8\uB2E4. \uC77C\uBC18\uC801\uC73C\uB85C \uD074\uB77C\uC774\uC5B8\uD2B8\uAC00 \uBE0C\uB77C\uC6B0\uC800\uC5D0\uC11C \uC9C1\uC811
            Rauthy\uC5D0 \uC694\uCCAD\uD574\uC57C \uD558\uB294 \uACBD\uC6B0(\uC77C\uBC18\uC801\uC73C\uB85C SPA)\uC5D0\uB9CC \uD544\uC694\uD569\uB2C8\uB2E4.`, descPKCE: `\uD074\uB77C\uC774\uC5B8\uD2B8\uAC00 \uC774\uB97C \uC9C0\uC6D0\uD558\uB294 \uACBD\uC6B0, \uCD94\uAC00 \uBCF4\uC548\uC744 \uC704\uD574 \uD56D\uC0C1 S256 PKCE\uB97C \uD65C\uC131\uD654\uD574\uC57C \uD569\uB2C8\uB2E4.
            \uAE30\uBC00\uC774 \uC544\uB2CC \uD074\uB77C\uC774\uC5B8\uD2B8(\uC608: SPA)\uB97C \uC0AC\uC6A9\uD558\uB294 \uACBD\uC6B0\uC5D0\uB294 \uCDA9\uBD84\uD55C \uBCF4\uC548\uC744 \uC704\uD574 \uCD5C\uC18C\uD55C PKCE \uCC4C\uB9B0\uC9C0 \uC911
            \uD558\uB098\uB97C \uD65C\uC131\uD654\uD574\uC57C \uD569\uB2C8\uB2E4.`, descPKCEEnforce: `PKCE\uAC00 \uD65C\uC131\uD654\uB41C \uACBD\uC6B0, \uBC18\uB4DC\uC2DC \uC0AC\uC6A9\uB418\uC5B4\uC57C \uD569\uB2C8\uB2E4. \uC720\uD6A8\uD55C \uCC4C\uB9B0\uC9C0\uAC00 \uD3EC\uD568\uB418\uC9C0
            \uC54A\uC740 \uB85C\uADF8\uC778 \uC694\uCCAD\uC740 \uAC70\uBD80\uB429\uB2C8\uB2E4.`, descUri: `\uC6D0\uD558\uB294 \uB9CC\uD07C \uB9AC\uB514\uB809\uC158 URI\uB97C \uC81C\uACF5\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uAC01\uAC01\uC758 \uB05D\uC5D0 <code>*</code> \uB97C
            \uC640\uC77C\uB4DC\uCE74\uB4DC\uB85C \uC0AC\uC6A9\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.`, errConfidentialPKCE: "\uD074\uB77C\uC774\uC5B8\uD2B8\uB294 \uAE30\uBC00 \uB610\uB294 PKCE \uCC4C\uB9B0\uC9C0 \uC911 \uD558\uB098 \uC774\uC0C1 \uD65C\uC131\uD654\uB418\uC5B4\uC57C \uD569\uB2C8\uB2E4.", forceMfa: "\uAC15\uC81C MFA", generateSecret: "\uC0C8 Secret \uC0DD\uC131", name: "\uD074\uB77C\uC774\uC5B8\uD2B8 \uC774\uB984", scim: { baseUri: `The SCIM base URI is the one from which the sub routes like 
                <code>{base_uri}/Users/{id}</base_uri></code> can be derived correctly.`, desc: "If this client supports {{ SCIM_LINK }}, you can activate it here.", enable: "Enable SCIMv2", groupSync: "Synchronize Groups", groupSyncPrefix: "Groups Filter Prefix", groupSyncPrefixDesc: `You can filter the groups for the synchronization by an optional prefix.
                For instance, if the groups <code>app:admins</code> and <code>app:users</code> exist, the prefix
                 <code>app:</code> would only sync these groups, as well as only those users that are linked to at least
                 one of these groups.`, reqDesc: "A few things are required for compatibility:", reqLi1: "The client must handle <code>externalId</code> correctly.", reqLi2: `At least <code>/Users</code> endpoints with <code>filter=externalId eq "*"</code> and
                <code>filter=userName eq "*"</code> must be supported.`, reqLi3: `If groups should be synchronized, <code>/Groups</code> must also support 
                <code>filter=displayName eq "*"</code>.` }, scopes: { allowed: "\uD5C8\uC6A9\uB41C \uBC94\uC704", default: "\uAE30\uBCF8 \uBC94\uC704", desc: `\uD5C8\uC6A9\uB41C \uBC94\uC704\uB294 <code>authorization_code</code> \uD50C\uB85C\uC6B0\uB97C \uC0AC\uC6A9\uD560 \uB54C \uB85C\uADF8\uC778 \uB9AC\uB514\uB809\uC158 \uC911\uC5D0
                \uD074\uB77C\uC774\uC5B8\uD2B8\uAC00 \uB3D9\uC801\uC73C\uB85C \uC694\uCCAD\uD560 \uC218 \uC788\uB294 \uBC94\uC704\uC785\uB2C8\uB2E4. \uC608\uB97C \uB4E4\uC5B4 <code>password</code> \uB97C
                \uC0AC\uC6A9\uD560 \uB54C, \uC77C\uBD80 \uBB38\uC81C\uB97C \uD574\uACB0\uD558\uAE30 \uC704\uD574 \uAE30\uBCF8 \uBC94\uC704\uAC00 \uD56D\uC0C1 \uD1A0\uD070\uC5D0 \uCD94\uAC00\uB429\uB2C8\uB2E4.` }, tokenLifetime: { p1: "\uD1A0\uD070 \uC218\uBA85\uC740 \uC561\uC138\uC2A4 \uD1A0\uD070\uACFC ID \uD1A0\uD070\uC5D0 \uC801\uC6A9\uB418\uBA70, \uCD08 \uB2E8\uC704\uC785\uB2C8\uB2E4.", p2: `\uD074\uB77C\uC774\uC5B8\uD2B8\uAC00 EdDSA \uB610\uB294 ed25519 \uC54C\uACE0\uB9AC\uC998\uC744 \uC9C0\uC6D0\uD558\uBA74, \uD56D\uC0C1 \uC120\uD638\uB418\uB294 \uC635\uC158\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4.
                RSA \uC54C\uACE0\uB9AC\uC998\uC740 \uD638\uD658\uC131\uC744 \uC704\uD574\uC11C\uB9CC \uC874\uC7AC\uD569\uB2C8\uB2E4.`, p3: "Refresh \uD1A0\uD070\uC758 \uC54C\uACE0\uB9AC\uC998\uC740 Rauthy\uC5D0\uC11C\uB9CC \uC0AC\uC6A9\uB418\uBBC0\uB85C, \uBCC0\uACBD\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4." } }, common: { account: "\uACC4\uC815", addNew: "\uC0DD\uC131", back: "\uB4A4\uB85C", contact: "\uC5F0\uB77D\uCC98", copiedToClip: "\uD074\uB9BD\uBCF4\uB4DC\uB85C \uBCF5\uC0AC\uB418\uC5C8\uC2B5\uB2C8\uB2E4.", details: "\uC790\uC138\uD788", edit: "\uD3B8\uC9D1", enabled: "\uD65C\uC131\uD654", filter: "\uD544\uD130", from: "\uBD80\uD130", information: "\uC815\uBCF4", language: "\uC5B8\uC5B4", loading: "\uB85C\uB529\uC911...", name: "\uC774\uB984", nameExistsAlready: "\uC774\uBBF8 \uC874\uC7AC\uD558\uB294 \uC774\uB984\uC785\uB2C8\uB2E4.", note: "\uCC38\uACE0", noEntries: "\uBE44\uC5B4 \uC788\uC74C", reset: "\uCD08\uAE30\uD654", search: "\uAC80\uC0C9", searchOptions: "\uAC80\uC0C9 \uC635\uC158", until: "\uAE4C\uC9C0" }, docs: { book: "Rauthy\uC5D0 \uB300\uD55C \uBB38\uC11C:", encryption: "\uC554\uD638\uD654", encKeys: { header: "\uC554\uD638\uD654 \uD0A4", keyActive: "\uD65C\uC131\uD654\uB41C \uD0A4", keysAvailable: "\uAC00\uB2A5\uD55C \uD0A4", migrate: "\uB9C8\uC774\uADF8\uB808\uC774\uC158", migrateToKey: "\uAE30\uC874\uC758 \uBAA8\uB4E0 \uC554\uD638\uD654\uB41C \uAC12\uC744 \uB2E4\uC74C \uD0A4\uB85C \uB9C8\uC774\uADF8\uB808\uC774\uC158", p1: `\uC774 \uD0A4\uB294 \uB0B4\uBD80\uC5D0\uC11C \uC0AC\uC6A9\uB418\uB294 \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC640\uB294 \uBCC4\uAC1C\uB85C, \uC138\uC158, \uCFE0\uD0A4 \uB4F1 \uCD94\uAC00 \uC554\uD638\uD654\uC5D0 \uC0AC\uC6A9\uB429\uB2C8\uB2E4.
                \uC774 \uD0A4\uB294 \uC815\uC801\uC73C\uB85C \uAD6C\uC131\uB418\uC9C0\uB9CC \uC774 \uD398\uC774\uC9C0\uC5D0\uC11C \uC218\uB3D9\uC73C\uB85C \uBCC0\uACBD \uBC0F \uB9C8\uC774\uADF8\uB808\uC774\uC158\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.`, p2: `\uD65C\uC131 \uD0A4\uB294 Rauthy \uC124\uC815 \uD30C\uC77C \uB610\uB294 \uD658\uACBD \uBCC0\uC218\uC5D0 \uC815\uC801\uC73C\uB85C \uC124\uC815\uB429\uB2C8\uB2E4. \uC5EC\uAE30\uC5D0\uC11C \uB3D9\uC801\uC73C\uB85C \uC0DD\uC131\uD560 \uC218
                \uC5C6\uC2B5\uB2C8\uB2E4. \uBAA8\uB4E0 \uC0C8 JWK \uC554\uD638\uD654\uB294 \uD56D\uC0C1 \uD604\uC7AC \uD65C\uC131 \uD0A4\uB97C \uC0AC\uC6A9\uD569\uB2C8\uB2E4.`, p3: `\uAE30\uC874 Secret\uC744 \uBAA8\uB450 \uB9C8\uC774\uADF8\uB808\uC774\uC158\uD558\uB294 \uACBD\uC6B0, \uB370\uC774\uD130 \uC138\uD2B8\uAC00 \uD070 \uACBD\uC6B0\uC5D0\uB294 \uC644\uB8CC\uD558\uB294 \uB370 \uC218 \uCD08\uAC00 \uAC78\uB9B4 \uC218
                \uC788\uC2B5\uB2C8\uB2E4.`, pNotPossible: "\uB9C8\uC774\uADF8\uB808\uC774\uC158\uD558\uB824\uBA74 \uCD5C\uC18C 2\uAC1C\uC758 \uC554\uD638\uD654 \uD0A4\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4." }, hashing: { calculate: "\uACC4\uC0B0", currValuesHead: "\uD604\uC7AC \uAC12", currValues1: "\uBC31\uC5D4\uB4DC\uC758 \uD604\uC7AC \uAC12\uC740 \uB2E4\uC74C\uACFC \uAC19\uC2B5\uB2C8\uB2E4.", currValuesNote: `\uCC38\uACE0: \uBC31\uC5D4\uB4DC\uC758 \uB85C\uADF8\uC778 \uC2DC\uAC04\uC740 Rauthy\uAC00 \uC2DC\uC791\uB41C \uD6C4 \uCD5C\uC18C 5\uD68C \uC774\uC0C1 \uB85C\uADF8\uC778\uC5D0 \uC131\uACF5\uD55C \uD6C4\uC5D0\uB9CC
                \uCE21\uC815\uB41C \uAC00\uC774\uB4DC\uB77C\uC778\uC744 \uC81C\uACF5\uD569\uB2C8\uB2E4. \uAE30\uBCF8\uAC12\uC740 \uD56D\uC0C1 \uC0C8\uB85C \uB2E4\uC2DC \uC2DC\uC791\uD55C \uD6C4 2000 ms\uC774\uBA70, \uB85C\uADF8\uC778\uC5D0 \uC131\uACF5\uD560
                \uB54C\uB9C8\uB2E4 \uC7AC\uACC4\uC0B0\uB429\uB2C8\uB2E4.`, currValuesThreadsAccess: "\uC0AC\uC6A9 \uAC00\uB2A5\uD55C \uC2A4\uB808\uB4DC \uAC1C\uC218 (p_cost)", loginTimeHead: "\uB85C\uADF8\uC778 \uC2DC\uAC04\uC5D0 \uB300\uD55C \uACAC\uD574", loginTime1: `\uC77C\uBC18\uC801\uC73C\uB85C \uC0AC\uC6A9\uC790\uB294 \uBAA8\uB4E0 \uAC83\uC774 \uAC00\uB2A5\uD55C \uD55C \uBE68\uB9AC \uCC98\uB9AC\uB418\uAE30\uB97C \uC6D0\uD569\uB2C8\uB2E4. \uD558\uC9C0\uB9CC \uC548\uC804\uD55C \uB85C\uADF8\uC778\uC744
                \uC704\uD574 500~1000 ms \uC815\uB3C4\uB294 \uBB38\uC81C\uAC00 \uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. \uB85C\uADF8\uC778 \uC2DC\uAC04\uC774 \uB108\uBB34 \uC9E7\uC73C\uBA74 \uD574\uC2DC\uC758 \uAC15\uB3C4\uAC00 \uB0AE\uC544\uC9C8 \uC218
                \uC788\uC73C\uBBC0\uB85C \uB108\uBB34 \uC9E7\uC544\uC11C\uB294 \uC548 \uB429\uB2C8\uB2E4.`, loginTime2: `\uC774 \uC720\uD2F8\uB9AC\uD2F0\uB294 \uCD5C\uB300\uD55C\uC758 \uBCF4\uC548\uC744 \uC81C\uACF5\uD558\uAE30 \uC704\uD574 \uB85C\uADF8\uC778 \uC2DC\uAC04\uC744 500ms \uBBF8\uB9CC\uC73C\uB85C \uC124\uC815\uD560 \uC218
                \uC5C6\uC2B5\uB2C8\uB2E4.`, mCost1: `<code>m_cost</code> \uB294 \uD574\uC2F1\uC5D0 \uC0AC\uC6A9\uB418\uB294 <b>\uBA54\uBAA8\uB9AC (in kB)</b> \uC591\uC785\uB2C8\uB2E4.
                \uBB3C\uB860 \uAC12\uC774 \uB192\uC744\uC218\uB85D \uC88B\uC9C0\uB9CC, \uC2DC\uC2A4\uD15C\uC758 \uBA54\uBAA8\uB9AC\uB97C \uACE0\uB824\uD558\uC5EC\uC57C \uD569\uB2C8\uB2E4.<br>
                \uC608\uB97C \uB4E4\uC5B4 4\uAC1C\uC758 \uBE44\uBC00\uBC88\uD638\uB97C \uB3D9\uC2DC\uC5D0 \uD574\uC2DC\uD558\uB294 \uACBD\uC6B0, \uD574\uC2DC\uD558\uB294 \uB3D9\uC548 <code>4 x m_cost</code> \uAC00
                \uD544\uC694\uD569\uB2C8\uB2E4. \uC774\uB7EC\uD55C \uB9AC\uC18C\uC2A4\uB97C \uC0AC\uC6A9\uD560 \uC218 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.`, mCost2: `<code>m_cost</code> \uB97C \uC870\uC815\uD558\uB294 \uAC83\uC740 \uB9E4\uC6B0 \uC27D\uC2B5\uB2C8\uB2E4. Rauthy\uAC00 \uC0AC\uC6A9\uD574\uC57C \uD558\uB294 \uCD5C\uB300 \uBA54\uBAA8\uB9AC \uC591\uC744
                \uC815\uC758\uD558\uACE0, \uC774\uB97C \uCD5C\uB300 \uD5C8\uC6A9 \uBCD1\uB82C \uB85C\uADF8\uC778 \uC218(<code>MAX_HASH_THREADS</code>)\uB85C \uB098\uB208 \uB2E4\uC74C \uC18C\uB7C9\uC758 \uC815\uC801
                \uBA54\uBAA8\uB9AC\uB97C \uBE7C\uBA74 \uB429\uB2C8\uB2E4. \uC5BC\uB9C8\uB098 \uB9CE\uC740 \uC815\uC801 \uBA54\uBAA8\uB9AC\uB97C \uACE0\uB824\uD574\uC57C \uD558\uB294\uC9C0\uB294 \uC0AC\uC6A9\uB418\uB294 \uB370\uC774\uD130\uBCA0\uC774\uC2A4\uC640 \uCD1D
                \uC0AC\uC6A9\uC790 \uC218\uC5D0 \uB530\uB77C \uB2E4\uB974\uC9C0\uB9CC \uC77C\uBC18\uC801\uC73C\uB85C <code>32~96MB</code> \uBC94\uC704\uAC00 \uC801\uB2F9\uD569\uB2C8\uB2E4.`, mCost3: "\uD5C8\uC6A9\uB418\uB294 <code>m_cost</code> \uC758 \uCD5C\uC18C\uAC12\uC740 <code>32768</code> \uC785\uB2C8\uB2E4.", pCost1: `<code>p_cost</code> \uB294 \uD574\uC2F1\uC744 \uC704\uD55C <b>\uBCD1\uB82C \uCC98\uB9AC \uC218</b>\uB97C \uC815\uC758\uD569\uB2C8\uB2E4. \uC774 \uAC12\uC740 \uB300\uBD80\uBD84 Rauthy\uC758
                \uAE30\uBCF8\uAC12\uC778 8 \uC774\uB0B4\uB85C \uC0AC\uC6A9\uB429\uB2C8\uB2E4.`, pCost2: `\uC77C\uBC18\uC801\uC778\uC73C\uB85C <code>p_cost</code> \uB294 \uC0AC\uC6A9\uAC00\uB2A5\uD55C \uCF54\uC5B4\uC758 2\uBC30\uB85C \uC124\uC815\uB429\uB2C8\uB2E4.
                \uC608\uB97C \uB4E4\uC5B4, 4\uCF54\uC5B4 \uC2DC\uC2A4\uD15C\uC744 \uC0AC\uC6A9\uC911\uC774\uB77C\uBA74, <code>p_cost</code> \uAC00 <code>8</code> \uB85C \uC124\uC815\uB429\uB2C8\uB2E4.
                \uB2E8, \uC774 \uAC12\uC740 \uAD6C\uC131\uB41C \uD5C8\uC6A9\uB41C \uBCD1\uB82C \uB85C\uADF8\uC778 (<code>MAX_HASH_THREADS</code>) \uC744 \uACE0\uB824\uD558\uC5EC \uC801\uC808\uD788 \uC904\uC5EC\uC57C
                \uD569\uB2C8\uB2E4.`, tCost1: `<code>t_cost</code> \uB294 \uD574\uC2F1\uC744 \uC704\uD55C <b>\uC2DC\uAC04</b> \uC744 \uC815\uC758\uD569\uB2C8\uB2E4. <code>m_cost</code> \uC640
                <code>p_cost</code> \uB294 \uAE30\uBCF8\uC801\uC73C\uB85C \uD658\uACBD\uC5D0 \uC758\uD574 \uC8FC\uC5B4\uC9C0\uAE30 \uB54C\uBB38\uC5D0, \uC774 \uAC12\uC740 \uC2E4\uC81C\uB85C \uD29C\uB2DD\uC774 \uD544\uC694\uD55C
                \uC720\uC77C\uD55C \uAC12\uC785\uB2C8\uB2E4.`, tCost2: `\uD29C\uB2DD\uC740 \uAC04\uB2E8\uD569\uB2C8\uB2E4. <code>m_cost</code> \uC640 <code>p_cost</code> \uB97C \uC801\uC808\uD788 \uC124\uC815\uD55C \uB2E4\uC74C
                <code>t_cost</code> \uB97C \uB85C\uADF8\uC778 \uBAA9\uD45C \uC2DC\uAC04\uC5D0 \uB3C4\uB2EC\uD560 \uB54C\uAE4C\uC9C0 \uC99D\uAC00\uC2DC\uD0A4\uBA74 \uB429\uB2C8\uB2E4.`, utilityHead: "\uD30C\uB77C\uBA54\uD130 \uACC4\uC0B0 \uC720\uD2F8\uB9AC\uD2F0", utility1: `\uC774 \uB3C4\uAD6C\uB97C \uC0AC\uC6A9\uD558\uC5EC \uC2DC\uC2A4\uD15C\uC5D0 \uC801\uD569\uD55C \uAC12\uC744 \uB300\uB7B5\uC801\uC73C\uB85C \uAD6C\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC774 \uB3C4\uAD6C\uB294 \uC2DC\uC2A4\uD15C\uC758
                \uC2E4\uC81C \uC131\uB2A5\uC744 \uD14C\uC2A4\uD2B8\uD558\uBBC0\uB85C \uBAA8\uB4E0 \uB2E4\uB978 \uC11C\uBE44\uC2A4\uB97C \uC0AC\uC6A9\uD558\uB294 \uC0C1\uD0DC\uC5D0\uC11C Rauthy\uB97C \uC2E4\uD589\uD574\uC57C \uD55C\uB2E4\uB294 \uC810\uC5D0
                \uC720\uC758\uD558\uC138\uC694. \uD574\uB2F9 \uC2DC\uC2A4\uD15C\uC758 \uC77C\uBC18\uC801\uC778 \uC0AC\uC6A9 \uD658\uACBD\uC5D0\uC11C \uC774 \uC720\uD2F8\uB9AC\uD2F0\uB97C \uC2E4\uD589\uD574\uC57C \uC624\uBC84 \uD29C\uB2DD\uC744 \uBC29\uC9C0\uD560 \uC218
                \uC788\uC2B5\uB2C8\uB2E4.`, utility2: `<code>m_cost</code> \uC740 \uC635\uC158\uC774\uBA70, \uBE44\uC5B4 \uC788\uC73C\uBA74 \uC548\uC804\uD55C \uCD5C\uC18C\uAC12\uC778 <code>32768</code> \uC774 \uC0AC\uC6A9\uB429\uB2C8\uB2E4.
                <code>p_cost</code> \uC740 \uC635\uC158\uC774\uBA70, \uBE44\uC5B4 \uC788\uC73C\uBA74 \uC2DC\uC2A4\uD15C\uC758 <code>\uBAA8\uB4E0 \uC2A4\uB808\uB4DC</code> \uB97C \uC0AC\uC6A9\uD569\uB2C8\uB2E4.`, time: "\uC2DC\uAC04", targetTime: "\uBAA9\uD45C \uC2DC\uAC04", tune: "\uC911\uC694: \uC774\uB7EC\uD55C \uAC12\uC740 \uCD5C\uC885 \uC544\uD0A4\uD14D\uCC98\uC5D0\uC11C \uC124\uC815\uB418\uC5B4\uC57C \uD569\uB2C8\uB2E4!", pDetials: `Argon2ID\uC5D0 \uB300\uD55C \uC790\uC138\uD55C \uC18C\uAC1C\uB97C \uC6D0\uD558\uC2E0\uB2E4\uBA74 \uC628\uB77C\uC778\uC5D0 \uB9CE\uC740 \uC790\uB8CC\uAC00 \uC788\uC2B5\uB2C8\uB2E4. \uC774 \uAC00\uC774\uB4DC\uC5D0\uC11C\uB294 \uAC12\uC5D0
                \uB300\uD55C \uC544\uC8FC \uAC04\uB7B5\uD55C \uAC1C\uC694\uB9CC \uC81C\uACF5\uD569\uB2C8\uB2E4. \uB2E4\uC74C \uC138 \uAC00\uC9C0\uB97C \uAD6C\uC131\uD574\uC57C \uD569\uB2C8\uB2E4.`, pTune: "\uC2DC\uC2A4\uD15C\uC758 \uC131\uB2A5\uC5D0 \uB530\uB77C \uB2E4\uB985\uB2C8\uB2E4. \uC131\uB2A5\uC774 \uC88B\uC744\uC218\uB85D \uB354 \uC548\uC804\uD55C \uAC12\uC744 \uC124\uC815\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.", pUtility: `\uC774 \uC720\uD2F8\uB9AC\uD2F0\uB294 \uD50C\uB7AB\uD3FC\uC5D0 \uAC00\uC7A5 \uC801\uD569\uD55C Argon2ID \uC124\uC815\uC744 \uCC3E\uC744 \uC218 \uC788\uB3C4\uB85D \uB3C4\uC640\uC90D\uB2C8\uB2E4. Argon2ID\uB294 \uD604\uC7AC
                \uC0AC\uC6A9 \uAC00\uB2A5\uD55C \uAC00\uC7A5 \uC548\uC804\uD55C \uBE44\uBC00\uBC88\uD638 \uD574\uC2F1 \uC54C\uACE0\uB9AC\uC998\uC785\uB2C8\uB2E4. \uC774 \uC54C\uACE0\uB9AC\uC998\uC744 \uCD5C\uB300\uD55C \uD65C\uC6A9\uD558\uB824\uBA74 \uAC01 \uC2DC\uC2A4\uD15C\uC5D0
                \uB9DE\uAC8C \uC870\uC815\uD574\uC57C \uD569\uB2C8\uB2E4.` }, openapi: "\uC678\uBD80 \uC560\uD50C\uB9AC\uCF00\uC774\uC158\uC744 \uD1B5\uD569\uD558\uAE30 \uC704\uD55C Rauthy\uC758 API \uC0AC\uC6A9 \uBC29\uBC95:", openapiNote: `\uBC31\uC5D4\uB4DC \uC124\uC815\uC5D0 \uB530\uB77C Swagger UI\uAC00 \uC678\uBD80\uC5D0 \uB178\uCD9C\uB418\uC9C0 \uC54A\uC744 \uC218\uB3C4 \uC788\uC2B5\uB2C8\uB2E4.
            \uD558\uC9C0\uB9CC \uAE30\uBCF8\uC801\uC73C\uB85C \uB0B4\uBD80\uC5D0\uC11C\uB294 Swagger UI\uB97C \uD1B5\uD574 \uC815\uBCF4\uB97C \uD655\uC778\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.`, source: "Rauthy\uC758 \uC18C\uC2A4\uCF54\uB4DC" }, error: { needsAdminRole: `<b>rauthy_admin</b> \uC5ED\uD560\uC774 \uBD80\uC5EC\uB418\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.<br/>
            \uAD00\uB9AC\uC790 \uD328\uB110\uC5D0 \uC811\uADFC\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.`, noAdmin: `Rauthy \uAD00\uB9AC\uC790 \uACC4\uC815\uC5D0\uB294 <b>MFA\uAC00 \uD65C\uC131\uD654</b>\uB418\uC5B4 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.<br>
            <b>\uACC4\uC815</b> \uC73C\uB85C \uC774\uB3D9 \uD6C4 MFA\uB97C \uD65C\uC131\uD654\uD558\uC138\uC694.<br>
            \uD65C\uC131\uD654 \uD6C4\uC5D0\uB294 \uB85C\uADF8\uC544\uC6C3\uD55C \uB4A4 \uB2E4\uC2DC \uB85C\uADF8\uC778\uD574\uC57C \uD569\uB2C8\uB2E4.` }, events: { eventLevel: "\uC774\uBCA4\uD2B8 \uB808\uBCA8", eventType: "\uC774\uBCA4\uD2B8 \uD0C0\uC785" }, groups: { delete1: "\uC774 \uADF8\uB8F9\uC744 \uC0AD\uC81C\uD558\uC2DC\uACA0\uC2B5\uB2C8\uAE4C?", name: "\uADF8\uB8F9 \uC774\uB984" }, jwks: { alg: "\uC54C\uACE0\uB9AC\uC998", p1: "\uD1A0\uD070 \uC11C\uBA85\uC5D0 \uC0AC\uC6A9\uB418\uB294 Json Web Keys(JWKs)\uC785\uB2C8\uB2E4.", p2: `JWKs\uB294 \uAE30\uBCF8\uC801\uC73C\uB85C \uB9E4\uC6D4 1\uC77C\uB9C8\uB2E4 \uD68C\uC804\uB429\uB2C8\uB2E4. \uC0C8\uB85C \uC0DD\uC131\uB41C \uBAA8\uB4E0 \uD1A0\uD070\uC758 \uACBD\uC6B0, \uC8FC\uC5B4\uC9C4 \uC54C\uACE0\uB9AC\uC998\uC5D0 \uB300\uD574
            \uC0AC\uC6A9 \uAC00\uB2A5\uD55C \uCD5C\uC2E0 \uD0A4\uB9CC \uC11C\uBA85\uC5D0 \uC0AC\uC6A9\uB429\uB2C8\uB2E4. \uD604\uC7AC \uC720\uD6A8\uD55C \uD1A0\uD070\uC5D0 \uB300\uD574 \uC720\uD6A8\uC131\uC744 \uAC80\uC0AC\uD558\uAE30 \uC704\uD574 \uC774\uC804 \uD0A4\uB294
            \uC7A0\uC2DC \uBCF4\uAD00\uB418\uBA70, \uC774\uD6C4 \uC790\uB3D9\uC73C\uB85C \uC815\uB9AC\uB429\uB2C8\uB2E4.`, p3: `\uD0A4\uB97C \uC218\uB3D9\uC73C\uB85C \uD68C\uC804\uD560 \uC218\uB3C4 \uC788\uC2B5\uB2C8\uB2E4. Rauthy \uC778\uC2A4\uD134\uC2A4\uAC00 \uC2E4\uD589 \uC911\uC778 \uD558\uB4DC\uC6E8\uC5B4\uC5D0 \uB530\uB77C \uC218 \uCD08\uAC00 \uAC78\uB9B4 \uC218
            \uC788\uC2B5\uB2C8\uB2E4.`, type: "\uD0C0\uC785", rotateKeys: "\uD0A4 \uD68C\uC804" }, nav: { apiKeys: "API \uD0A4", attributes: "\uC18D\uC131", blacklist: "\uBE14\uB799\uB9AC\uC2A4\uD2B8", clients: "\uD074\uB77C\uC774\uC5B8\uD2B8", config: "\uC124\uC815", docs: "\uBB38\uC11C", events: "\uC774\uBCA4\uD2B8", groups: "\uADF8\uB8F9", providers: "\uACF5\uAE09\uC790", roles: "\uC5ED\uD560", scopes: "\uBC94\uC704", sessions: "\uC138\uC158", users: "\uC0AC\uC6A9\uC790" }, options: { expires: "\uB9CC\uB8CC\uC77C", lastSeen: "\uB9C8\uC9C0\uB9C9 \uC0AC\uC6A9\uC2DC\uAC04", state: "\uC0C1\uD0DC" }, passwordPolicy: { configDesc: "\uC0C8 \uBE44\uBC00\uBC88\uD638\uC5D0 \uB300\uD55C \uC815\uCC45\uC785\uB2C8\uB2E4.", resetSet0: "0\uC73C\uB85C \uC124\uC815\uD558\uBA74 \uBE44\uD65C\uC131\uD654\uB429\uB2C8\uB2E4.", validForDays: "\uAE30\uAC04 \uC81C\uD55C", validityNew: "\uC774\uC804 \uBE44\uBC00\uBC88\uD638 \uC0AC\uC6A9 \uC81C\uD55C \uC815\uCC45\uC785\uB2C8\uB2E4." }, providers: { config: { allowInsecureTls: "\uC548\uC804\uD558\uC9C0 \uC54A\uC740 TLS \uD5C8\uC6A9", clientName: "\uD074\uB77C\uC774\uC5B8\uD2B8 \uC774\uB984", custRootCa: "\uC0AC\uC6A9\uC790 \uC9C0\uC815 Root CA PEM \uC0AC\uC6A9", descAuthMethod: `<code>/token</code> \uC5D4\uB4DC\uD3EC\uC778\uD2B8\uC5D0\uC11C \uC0AC\uC6A9\uD560 \uC778\uC99D \uBC29\uBC95\uC785\uB2C8\uB2E4.<br>
                \uB300\uBD80\uBD84\uC758 \uC778\uC99D \uACF5\uAE09\uC790\uB294 <code>basic</code> \uC73C\uB85C \uC791\uC5C5\uD574\uC57C \uD558\uBA70, \uC77C\uBD80 \uC778\uC99D \uACF5\uAE09\uC790\uB294
                <code>post</code> \uB9CC \uC0AC\uC6A9\uD574\uC57C \uD569\uB2C8\uB2E4. \uB4DC\uBB38 \uACBD\uC6B0\uC9C0\uB9CC \uB450 \uAC00\uC9C0\uB97C \uBAA8\uB450 \uC0AC\uC6A9\uD574\uC57C \uD558\uB294 \uACBD\uC6B0\uB3C4
                \uC788\uC2B5\uB2C8\uB2E4. \uC778\uC99D \uACF5\uAE09\uC790\uC758 \uAC00\uC774\uB4DC\uB300\uB85C \uC124\uC815\uD558\uC2DC\uBA74 \uB429\uB2C8\uB2E4.`, descClientId: "\uC778\uC99D \uACF5\uAE09\uC790\uAC00 \uC81C\uACF5\uD55C \uD074\uB77C\uC774\uC5B8\uD2B8 ID", descClientName: "\uB85C\uADF8\uC778 \uD398\uC774\uC9C0\uC5D0 \uD45C\uC2DC\uB420 \uD074\uB77C\uC774\uC5B8\uD2B8 \uC774\uB984", descClientSecret: `\uC778\uC99D \uACF5\uAE09\uC790\uAC00 \uC81C\uACF5\uD55C \uD074\uB77C\uC774\uC5B8\uD2B8 Secret\uC785\uB2C8\uB2E4. \uCD5C\uC18C\uD55C \uD074\uB77C\uC774\uC5B8\uD2B8
                Secret \uB610\uB294 PKCE\uAC00 \uD544\uC694\uD569\uB2C8\uB2E4.`, descScope: "\uB85C\uADF8\uC778 \uB9AC\uB514\uB809\uC158\uC5D0 \uC0AC\uC6A9\uD560 \uBC94\uC704\uC785\uB2C8\uB2E4. \uACF5\uBC31\uC73C\uB85C \uAD6C\uBD84\uD558\uC5EC \uC785\uB825\uD569\uB2C8\uB2E4.", errNoAuthMethod: `\uD074\uB77C\uC774\uC5B8\uD2B8 Secret\uC774 \uC785\uB825\uB418\uC5B4 \uC788\uC9C0\uB9CC, \uD074\uB77C\uC774\uC5B8\uD2B8 \uC778\uC99D \uBC29\uBC95\uC774 \uD65C\uC131\uD654\uB418\uC5B4
                \uC788\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4.`, errConfidential: "\uCD5C\uC18C\uD55C \uAE30\uBC00 \uD074\uB77C\uC774\uC5B8\uD2B8\uC774\uAC70\uB098 PKCE\uB97C \uC0AC\uC6A9\uD574\uC57C \uD569\uB2C8\uB2E4.", jsonPath: { p1: "\uC5C5\uC2A4\uD2B8\uB9BC \uB85C\uADF8\uC778 \uC131\uACF5 \uD6C4, ID \uD1A0\uD070\uC758 \uAC12\uC744 \uC790\uB3D9\uC73C\uB85C \uB9E4\uD551\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.", p2: `<code>\uACBD\uB85C</code>\uB294 \uC815\uADDC\uC2DD\uACFC \uAC19\uC740 \uAD6C\uBB38\uC73C\uB85C \uC9C0\uC815\uD574\uC57C \uD569\uB2C8\uB2E4. \uB2E8\uC77C JSON \uAC12\uC774\uB098
                    JSON \uAC1D\uCCB4 \uB610\uB294 \uBC30\uC5F4\uC758 \uAC12\uC73C\uB85C \uCC98\uB9AC\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.`, p3: "<code>$.</code> \uB294 JSON \uAC1D\uCCB4\uC758 \uC2DC\uC791\uC744 \uD45C\uC2DC\uD569\uB2C8\uB2E4.", p4: "<code>*</code> \uB294 \uACBD\uB85C\uC5D0\uC11C \uC640\uC77C\uB4DC\uCE74\uB4DC\uB85C \uC0AC\uC6A9\uB429\uB2C8\uB2E4.", p5: `<code>$.roles</code> \uB294 <code>&#123;"roles": "value"&#125;</code> \uC744 \uBAA9\uD45C\uB85C
                    \uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.`, p6: `<code>$.roles.*</code> \uB294 <code>&#123;"roles": ["value", "notMyValue"]&#125;</code>
                    \uACFC \uAC19\uC774 \uAC1D\uCCB4 \uB610\uB294 \uBC30\uC5F4 \uB0B4\uBD80\uC758 \uAC12\uC744 \uBAA9\uD45C\uB85C \uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.` }, lookup: "\uC870\uD68C", pathAdminClaim: "\uAD00\uB9AC\uC790 Claim \uACBD\uB85C", pathMfaClaim: "MFA Claim \uACBD\uB85C", rootPemCert: "Root CA\uC758 PEM \uC778\uC99D\uC11C", mapMfa: `\uACF5\uAE09\uC790\uC5D0\uC11C \uC0AC\uC6A9\uC790\uAC00 \uB85C\uADF8\uC778\uD558\uB294 \uB3D9\uC548 2FA \uC774\uC0C1\uC744 \uC0AC\uC6A9\uD588\uC74C\uC744 \uB098\uD0C0\uB0B4\uB294 Claim\uC744 \uBC1C\uD589\uD558\uB294 \uACBD\uC6B0,
                MFA Claim \uACBD\uB85C\uB97C \uC9C0\uC815\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.`, mapUser: "\uC5C5\uC2A4\uD2B8\uB9BC ID Claim \uC5D0 \uB530\uB77C \uC0AC\uC6A9\uC790\uB97C Rauthy \uAD00\uB9AC\uC790\uB85C \uB9E4\uD551\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.", valueAdminClaim: "\uAD00\uB9AC\uC790 Claim \uAC12", valueMfaClaim: "MFA Claim \uAC12" }, delete: { areYouSure: "\uC774 \uACF5\uAE09\uC790\uB97C \uC0AD\uC81C\uD558\uC2DC\uACA0\uC2B5\uB2C8\uAE4C?", forceDelete: "\uAC15\uC81C \uC0AD\uC81C", isInUse1: "\uC774 \uACF5\uAE09\uC790\uB294 \uD65C\uC131 \uC0AC\uC6A9\uC790\uAC00 \uC0AC\uC6A9 \uC911\uC785\uB2C8\uB2E4!", isInUse2: `\uAC15\uC81C\uB85C \uC0AD\uC81C\uD560 \uC218\uB294 \uC788\uC9C0\uB9CC \uB85C\uCEEC \uBE44\uBC00\uBC88\uD638\uB098 \uD328\uC2A4\uD0A4\uAC00 \uC5C6\uB294 \uC0AC\uC6A9\uC790\uB294 \uB354 \uC774\uC0C1 \uB85C\uADF8\uC778\uD560 \uC218
                \uC5C6\uC2B5\uB2C8\uB2E4.`, linkedUsers: "\uC5F0\uACB0\uB41C \uC0AC\uC6A9\uC790" } }, roles: { adminNoMod: "<code>rauthy_admin</code> \uC5ED\uD560\uC740 \uBCC0\uACBD\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.", delete1: "\uC774 \uC5ED\uD560\uC744 \uC0AD\uC81C\uD558\uC2DC\uACA0\uC2B5\uB2C8\uAE4C?", name: "\uC5ED\uD560 \uC774\uB984" }, scopes: { defaultNoMod: "\uC774\uAC83\uC740 OIDC \uAE30\uBCF8 \uBC94\uC704 \uC911 \uD558\uB098\uC785\uB2C8\uB2E4. \uBCC0\uACBD\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.", delete1: "\uC774 \uBC94\uC704\uB97C \uC0AD\uC81C\uD558\uC2DC\uACA0\uC2B5\uB2C8\uAE4C?", deleteDefault: "OIDC \uAE30\uBCF8 \uBC94\uC704\uB294 \uC0AD\uC81C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.", mapping1: "\uC0AC\uC6A9\uC790 \uC9C0\uC815 \uBC94\uC704\uB97C \uC18D\uC131\uC5D0 \uB9E4\uD551\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.", mapping2: `\uAD6C\uC131\uB41C \uBAA8\uB4E0 \uCD94\uAC00 \uC18D\uC131\uC740 \uAC01 \uC0AC\uC6A9\uC790\uC5D0 \uB300\uD574 \uC0AC\uC6A9\uC790 \uC9C0\uC815 \uAC12\uC744 \uAC00\uC9C8 \uC218 \uC788\uC2B5\uB2C8\uB2E4.
            \uC774\uB7EC\uD55C \uC18D\uC131\uC774 \uBC94\uC704\uC5D0 \uB9E4\uD551\uB418\uBA74 \uC561\uC138\uC2A4 \uBC0F ID \uD1A0\uD070\uC5D0 \uD3EC\uD568\uB420 \uC218 \uC788\uC2B5\uB2C8\uB2E4.`, name: "\uBC94\uC704 \uC774\uB984" }, search: { orderBy: "\uC815\uB82C \uAE30\uC900", orderChangeToAsc: "\uC624\uB984\uCC28\uC21C\uC73C\uB85C \uC815\uB82C", orderChangeToDesc: "\uB0B4\uB9BC\uCC28\uC21C\uC73C\uB85C \uC815\uB82C" }, sessions: { invalidateAll: "\uBAA8\uB4E0 \uC138\uC158 \uC0AD\uC81C" }, tabs: { config: "\uC124\uC815", delete: "\uC0AD\uC81C" }, users: { attributes: "\uC18D\uC131", deleteUser: "\uC774 \uC0AC\uC6A9\uC790\uB97C \uC0AD\uC81C\uD558\uC2DC\uACA0\uC2B5\uB2C8\uAE4C?", descAttr: "\uC0AC\uC6A9\uC790 \uC9C0\uC815 \uC18D\uC131\uC744 \uC124\uC815\uD569\uB2C8\uB2E4. \uBAA8\uB4E0 \uD0A4/\uAC12 \uC30D\uC740 \uBB38\uC790\uC5F4/JSON \uAC12\uC73C\uB85C \uCC98\uB9AC\uB429\uB2C8\uB2E4.", forceLogout: "\uAE30\uC874 \uC138\uC158\uC744 \uBAA8\uB450 \uC0AD\uC81C\uD558\uACE0, \uC774 \uC0AC\uC6A9\uC790\uC758 \uBAA8\uB4E0 Refresh \uD1A0\uD070\uC744 \uC0AD\uC81C\uD558\uC2DC\uACA0\uC2B5\uB2C8\uAE4C?", lastLogin: "\uB9C8\uC9C0\uB9C9 \uB85C\uADF8\uC778", mfaDelete1: "\uC774 \uC0AC\uC6A9\uC790\uC758 \uD328\uC2A4\uD0A4\uB97C \uC0AD\uC81C\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4.", mfaDelete2: "\uC774 \uC791\uC5C5\uC740 \uB418\uB3CC\uB9B4 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4!", noMfaKeys: "\uB4F1\uB85D\uB41C \uD328\uC2A4\uD0A4 \uC5C6\uC74C", pkOnly1: "\uC774 \uC0AC\uC6A9\uC790\uB294 \uD328\uC2A4\uD0A4 \uC804\uC6A9 \uACC4\uC815\uC785\uB2C8\uB2E4.", pkOnly2: "\uC774 \uC0AC\uC6A9\uC790\uB294 \uBE44\uBC00\uBC88\uD638 \uC5C6\uB294 \uB85C\uADF8\uC778\uC744 \uC0AC\uC6A9\uD558\uBA70, \uC124\uC815\uB41C \uBE44\uBC00\uBC88\uD638\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.", pkOnly3: `\uC774 \uC0AC\uC6A9\uC790\uAC00 \uBAA8\uB4E0 \uBE44\uBC00\uBC88\uD638\uB97C \uBD84\uC2E4\uD55C \uACBD\uC6B0, \uACC4\uC815\uC744 \uC644\uC804\uD788 \uC7AC\uC124\uC815\uD558\uACE0 \uC0C8\uB85C\uC6B4 \uBE44\uBC00\uBC88\uD638
            \uC7AC\uC124\uC815 \uC774\uBA54\uC77C\uC744 \uBCF4\uB0BC \uC218 \uC788\uC2B5\uB2C8\uB2E4. \uC774\uB807\uAC8C \uD558\uB824\uBA74 'MFA' \uD0ED\uC73C\uB85C \uC774\uB3D9\uD558\uC5EC \uAE30\uC874\uC758 \uBAA8\uB4E0 \uD328\uC2A4\uD0A4\uB97C
            \uC0AD\uC81C\uD558\uC138\uC694.`, pwdNoInit: "\uC0AC\uC6A9\uC790\uAC00 \uC544\uC9C1 \uCD08\uAE30 \uBE44\uBC00\uBC88\uD638 \uC7AC\uC124\uC815\uC744 \uC218\uD589\uD558\uC9C0 \uC54A\uC558\uC2B5\uB2C8\uB2E4.", pwdSendEmailBtn: "\uC7AC\uC124\uC815 \uC774\uBA54\uC77C \uBCF4\uB0B4\uAE30", pwdSendEmailDesc: "\uC0C8 \uBE44\uBC00\uBC88\uD638\uB97C \uC124\uC815\uD558\uAC70\uB098, \uC7AC\uC124\uC815 \uC774\uBA54\uC77C\uC744 \uBCF4\uB0BC \uC218 \uC788\uC2B5\uB2C8\uB2E4.", savePassword: "\uBE44\uBC00\uBC88\uD638 \uC800\uC7A5", selfServiceDesc: "\uC0C8 \uBE44\uBC00\uBC88\uD638\uB97C \uC124\uC815\uD558\uAC70\uB098, \uC7AC\uC124\uC815 \uC774\uBA54\uC77C\uC744 \uBCF4\uB0BC \uC218 \uC788\uC2B5\uB2C8\uB2E4.", sendResetEmail: "\uC7AC\uC124\uC815 \uC774\uBA54\uC77C \uBCF4\uB0B4\uAE30" }, validation: { css: "\uBE44\uC815\uC0C1\uC801\uC778 CSS", origin: "\uBE44\uC815\uC0C1\uC801\uC778 \uC624\uB9AC\uC9C4", uri: "\uBE44\uC815\uC0C1\uC801\uC778 URI" } }, e;
function a() {
  return e;
}
function d() {
  switch (t()) {
    case "de":
      e = n;
      break;
    case "ko":
      e = s;
      break;
    default:
      e = i;
      break;
  }
}
export {
  d as i,
  a as u
};
